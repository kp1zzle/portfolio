{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-js-content-file-path-src-pages-projects-post-mdx-e37a0b0658c33f3c432c.js","mappings":"6IAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,wCAAyCO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,SAAU,KAAM,KAAMM,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,cAAeO,EAAAA,cAAoBV,EAAYK,OAAQ,KAAM,YAAa,gBAAiB,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,KAAMI,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,WAAY,KAAMG,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,6BAA8B,MACpkB,CAKA,UAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWb,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,C,wICXA,MAAMc,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAON,EAAAA,cAAoBO,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BX,EAAAA,cAAoB,IAAK,KAAMK,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAY5DO,EAAOC,IAAA,IAAC,KAACT,GAAK,SAAKL,EAAAA,cAAoBe,EAAAA,EAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiB3B,GACvC,OAAOW,EAAAA,cAAoBG,EAAUd,EAAOW,EAAAA,cAAoBiB,EAAAA,QAAqB5B,GACvF,C,6ECvBW6B,EAAc,sCACdC,EAAc,sCCwCzB,MAjCe,IAA8B,IAA7B,UAAEX,EAAS,SAAEF,GAAU,EACnC,MAAMD,GAAOe,EAAAA,EAAAA,IAAe,cAU5B,OACI,uBAAKC,UDtBU,mCCuBX,0BAAQA,UDlBG,oCCkBoBhB,EAAKiB,KAAKC,aAAaZ,OACtD,2BACI,sBAAIU,UDrBE,mCCsBF,sBAAIA,UAAWH,GAAa,gBAAC,KAAI,CAACM,GAAG,IAAIH,UAAWF,GAAa,SACjE,sBAAIE,UAAWH,GAAa,gBAAC,KAAI,CAACM,GAAG,SAASH,UAAWF,GAAa,UACtE,sBAAIE,UAAWH,GACX,gBAAC,KAAI,CAACM,GAAG,QAAQH,UAAWF,GAAa,WAMrD,4BACI,sBAAIE,UDnCC,iCCmCoBb,GACxBF,GAEH,C,+CCrBd,IAhBY,IAAgB,IAAf,MAAEK,GAAO,EAClB,MAAMN,GAAOe,EAAAA,EAAAA,IAAe,cAU5B,OACI,6BAAQT,EAAM,MAAIN,EAAKiB,KAAKC,aAAaZ,MAAc,C,sECkBxD,MAAMc,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB3B,GAC/B,MAAM4B,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf1B,EACFA,EAAW4B,GAGb,IAAIA,KAAsB5B,IAChC,CAAC4B,EAAmB5B,GACzB,C","sources":["webpack://portfolio/./src/pages/projects/post.mdx","webpack://portfolio/./src/pages/{mdx.frontmatter__slug}.js","webpack://portfolio/./src/components/layout.module.scss","webpack://portfolio/./src/components/layout.js","webpack://portfolio/./src/components/seo.js","webpack://portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/portfolio/portfolio/src/pages/projects/post.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--46809\";\nexport var heading = \"layout-module--heading--ddaca\";\nexport var navLinkItem = \"layout-module--nav-link-item--6b1dd\";\nexport var navLinkText = \"layout-module--nav-link-text--7a610\";\nexport var navLinks = \"layout-module--nav-links--109b3\";\nexport var siteTitle = \"layout-module--site-title--5b122\";","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    heading,\n    navLinks,\n    navLinkItem,\n    navLinkText,\n    siteTitle\n} from './layout.module.scss'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n    return (\n        <div className={container}>\n            <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n            <nav>\n                <ul className={navLinks}>\n                    <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\n                    <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li>\n                    <li className={navLinkItem}>\n                        <Link to=\"/blog\" className={navLinkText}>\n                            Blog\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n            <main>\n                <h1 className={heading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n    return (\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","ul","li","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","useStaticQuery","className","site","siteMetadata","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}